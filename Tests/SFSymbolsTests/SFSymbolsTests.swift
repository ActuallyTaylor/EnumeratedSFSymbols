import XCTest
#if canImport(AppKit)
import AppKit
#elseif canImport(UIKit)
import UIKit
#endif

@testable import SFSymbols

final class SFSymbolsTests: XCTestCase {
    func testAllValid() throws {
        for symbol in SFSymbol.allCases {
            #if canImport(AppKit)
            let image = NSImage(systemSymbolName: symbol.name, accessibilityDescription: nil)
            #elseif canImport(UIKit)
            let image = UIImage(systemName: symbol.name)
            #endif

            if image == nil {
                print("Invalid \(symbol.name)")
            }
            
            XCTAssertNotNil(image)
        }
    }
    
    func testV4Valid() throws {
        for symbol in SFSymbol.sfSymbolsV4 {
            #if canImport(AppKit)
            let image = NSImage(systemSymbolName: symbol.name, accessibilityDescription: nil)
            #elseif canImport(UIKit)
            let image = UIImage(systemName: symbol.name)
            #endif

            if image == nil {
                print("Invalid \(symbol.name)")
            }
            
            XCTAssertNotNil(image)
        }
    }
        
    func testV5Valid() throws {
        for symbol in SFSymbol.sfSymbolsV4 {
            #if canImport(AppKit)
            let image = NSImage(systemSymbolName: symbol.name, accessibilityDescription: nil)
            #elseif canImport(UIKit)
            let image = UIImage(systemName: symbol.name)
            #endif

            if image == nil {
                print("Invalid \(symbol.name)")
            }
            
            XCTAssertNotNil(image)
        }
    }

//    @available(iOS 17, *)
//    func testPrintV5Names() {
//        for symbol in SFSymbol.sfSymbolsV5 {
//            print("""
//            case .\(symbol.rawValue):
//                return "\(symbol.rawValue.replacingOccurrences(of: "_", with: ".").replacingOccurrences(of: "num_", with: ""))"
//            """)
//        }
//    }
//    
//    @available(iOS 17, *)
//    func testPrintV5Images() {
//        let symbols = "􀤒􁾛􁾝􁿳􁿵􁣈􁣉􀫾􀫿􁜾􁜿􁹛􁹜􁻧􁾠􁾡􁾢􁾣􁾤􁾥􁾦􁾧􁾨􁾩􁾪􁾫􁾬􁾭􁾮􁾯􁉾􁉿􁣔􁣕􂃕􁼧􁼨􁽓􁽔􁠃􁷚􂂩􂂪􂂫􂂬􂂭􂂮􂂯􂂰􂂱􂂲􁷁􁷂􁷃􁣡􁷌􁷍􁷎􁷏􁷐􁷑􁷒􁷓􂂳􂂴􂂵􂂶􂂷􂂸􂂹􂂺􁶽􁶾􁶿􁷀􁷉􁷊􁷋􀼭􁷞􁷠􁣛􁹫􁹬􀍸􀍹􁹡􁹢􁹪􁹣􁹤􁹥􁹦􁹧􁷟􁹨􁹩􂁀􂁁􂁄􂁅􂀂􂀃􂁈􂁉􂁌􂁍􂁔􂁕􁹭􁹮􁹯􁹰􁰏􁻻􁻽􁻾􁻿􁼀􁼁􁼂􁼃􁼄􁼅􁼆􁼇􁼈􁼉􁼊􁼋􁼌􀥰􀥱􁷥􁷧􁣖􁣗􁸏􁸑􁸓􁸕􂃱􂃲􂃳􂃴􂃵􂃶􂃷􁤥􁤦􂃧􂃨􁾄􁾅􁿼􁿽􁿾􁿿􁣐􁻮􁻯􁐙􁰉􁐚􁐛􂀙􁿜􁿝􁹙􁹚􁽇􁽈􁽉􁽊􁷖􁷗􁷘􁷙􁹄􁹅􁲉􁲊􁣷􁣸􂁝􂁞􂄁􂄂􁼡􁼢􁱂􁱀􁱁􁻇􁟫􁈸􁟬􂃯􂃰􂃻􂃼􂃽􂃾􁤫􁹿􁰤􁰥􁤑􁤓􁰒􁰓􁞺􂄗􂄘􂄅􂁩􂁪􂂉􂂊􂁫􂁬􁔂􁔃􁊒􁋞􁣘􀠹􂄉􂄊􀷺􀷻􁖲􁥨􁰚􁰛􁥦􁥧􁈾􁈿􁈼􁈽􁊨􁊩􁰦􁰧􁰶􁰷􁰪􁰫􁰲􁰳􁊦􁊧􁀬􁀭􁀮􁀯􁢶􁀓􁢳􁢴􁢵􁰹􁟋􁟈􁤈􁺼􁺽􁺾􁺿􁻀􁻌􁻍􁻎􁻏􁻐􁻒􁻑􁲍􁣽􁣾􁣿􁥾􁥿􁦀􁦁􁕤􁕥􁿢􁿣􁖰􁖱􁉛􁢟􁉨􁦔􁦕􁦖􁦗􁋍􁋎􁋏􁋐􁵽􁵾􁵿􁶀􁋑􁋒􁋓􁋔􁖟􁖠􁋕􁋖􁖡􁖢􁋗􁋘􁖣􁖤􁋙􁋚􁦈􁦉􁦊􁦋􁦌􁦍􁦎􁦏􁦐􁦑􁦒􁦓􁣹􁣺􁣻􁣼􁤀􁤁􁤂􁤃􁥩􁥪􁥫􁥬􁥭􁥮􁥯􁥰􁥱􁥲􁥳􁥴􁥵􁥶􁥷􁥸􁥹􁥺􁥻􁥼􁤍􁤎􁤏􁤐􁠗􁠘􁥎􁥏􁥐􁥑􁦆􁦇􁵴􁵵􁵷􁵸􁵹􁵺􁵻􁵼􂂛􂂜􂂑􂂒􂂝􂂞􂂓􂂔􁢢􁢣􁢤􁢥􁠢􁠣􁠤􁠨􁉜􁉝􁉞􁉟􁊚􁉡􁊜􁊝􁊞􁊠􁊡􁊣􁣩􁣪􁫏􁉰􁊐􁖗􁖜􁖘􁥽􁰸􁄵􁄶􁄷􁄸􁥚􁥞􁥟􁥛􁥠􁥡􁥜􁥢􁥣􁥝􁥤􁥥􁺪􁺫􁺬􁺭􁺮􁺯􁺰􁺱􁺲􁺳􁺴􁺵􁺶􁺷􁺸􁺹􁺺􁺻􁰍􁰎􂀸􂀹􂀼􂀽􂀆􂀇􂀾􂀿􂁾􂁿􂂀􂂁􁼵􁼶􁼙􁼚􁼛􁼜􀠖􁽬􁽭􁣯􁣰􁤄􁤅􁣱􁣲􀜤􁶺􂀶􁻈􁻉􂂆􂃈􂂇􁾀􁾁􁣓􁃏􁃐􁃲􁃳􁘹􁘺􁥉􁥊􁥋􁥌􂂼􂂽􁝸􁻴􁸸􁻵􁻶􁻷􁸹􁻸􁸺􁵤􁹠􂁠􂁡􂁢􂁣􂁤􂁥􂁦􂁧􂁨􁾰􁾱􁾲􁾳􁾴􁾵􁸴􁸵􁸶􁸷􁺁􁺂􁺃􁺄􁺅􁺆􁺇􁺈􁺉􁺊􁺋􁺌􁺍􁺎􁺏􁺐􁸞􁸟􁸠􁸡􁺤􁺥􁸢􁸣􁺦􁺧􁸤􁸥􁸦􁸧􁸨􁸩􁸪􁸫􁸬􁸭􁸮􁸯􁸰􁸱􁸲􁸳􁷯􁷰􁷳􁷴􁷷􁷸􁷱􁷲􁷵􁷶􁷹􁷺􁸅􁸆􁸇􁸈􁸋􁸌􁸃􁸄􁸉􁸊􁸍􁸎􁸗􁸘􁸙􁸚􁸛􁸜􁸝􁻊􁻋􁸼􂃓􁺟􁺠􁽸􁽹􁽺􁽻􁽼􁽽􁽾􁽿􁣙􁣚􂃜􁽧􁽨􁽩􁽪􁽫􁾒􁾓􁾔􁾕􁾖􁣣􁣤􁣥􁣦􁣧􁣨􁾍􀮠􀮡􀮢􀮣􁤯􁤰􁤱􁤲􁤳􁤬􀮤􀮥􀮦􀮧􁤭􀮨􀮩􀮪􀮫􁤮􀮬􀮭􀮮􀮯􁤴􁤵􁤶􁤷􁤸􁺑􀯣􀯤􀯥􀯦"
//        
//        for (offset, element) in SFSymbol.sfSymbolsV5.enumerated() {
//           let imageIndex = symbols.index(symbols.startIndex, offsetBy: offset)
//           print("""
//           case .\(element.rawValue):
//                return \"\(symbols[imageIndex])\"
//           """)
//        }
//    }
//    
//    func testPrintV4Images() {
//        let symbols = "􀈂􀈃􁅅􁅆􁂚􀈄􀈅􀈆􀈇􀈈􀈉􀻵􀻶􁚠􁚡􀈊􀈋􀈌􀈍􁚛􁝀􁝁􁚜􁚝􀈎􁗙􁗚􀈏􀓨􀤑􀦇􀈐􀒋􀉥􀉦􀉧􀧚􀓩􀣳􀈑􀈒􀈓􀈔􀼽􀼾􀜧􀜨􀿍􀿎􀿔􀿕􀈕􀈖􀈗􀈘􀈙􀈚􀈛􀈜􀧆􀧇􀈝􀈞􀣕􀣖􀣍􀣎􀤰􀤱􀬔􀬕􀈟􀈠􀈡􀈢􀈣􀈤􀒌􀒍􀈫􀈬􀈥􀈦􀈧􀈨􀈩􀈪􀤂􀤃􀩎􀩒􀩏􀩓􀩐􀩔􀩑􀩕􀭟􀭠􁘥􁘦􀩬􀩭􁘧􁘨􀪹􀪺􀩮􀩯􀤜􀤝􀥾􀨪􀤄􀤅􀨤􀨥􀈭􀈮􀈯􀈰􀈱􀈲􀈳􀈴􀈵􀈶􀈷􀈸􀈹􀈺􀣗􀣘􁙡􁙢􀩴􀩵􀩚􀩛􀢍􀢎􀈻􀈼􀈽􀈾􀈿􀉀􀤧􀉁􀉂􀉃􀫵􀫶􀫷􀉄􀟹􀟺􀼏􀼐􁕜􁕝􀉅􀦊􀉆􀥨􀉇􀦋􀳼􀳽􀥜􀦌􀹲􀹳􀕹􀩳􀺿􀹆􀩼􀪏􀧵􀓕􀣙􀉉􀒎􀒏􀉊􀉋􀧞􀮝􀻤􀻣􁁃􁁂􁉄􁉅􁉂􁉃􁉈􁉉􁉆􁉇􀉌􀉍􀉎􀉏􀰚􀰛􀰜􀰝􁎱􁖾􀉐􀉑􀉒􀉓􀰞􀰟􀰠􀰡􀉔􀉕􀉖􀉗􀰢􀰣􀰤􀰥􀉘􀒐􀰦􀰧􀉙􀒑􀰨􀰩􀉚􀉛􀉜􀉝􀬒􀬓􁆼􁆽􀤞􀤟􁇣􁇤􀫕􀫖􀫗􀫘􀻒􀻓􀤠􀤡􁂾􁂿􀤦􀥅􁆴􁆵􀩽􀩾􀉞􀉟􀉠􀉡􀼹􀼺􀟍􀟎􀫓􀫔􁆾􁆿􁖆􁖇􀟀􀟁􁋹􁋺􁝺􁝻􀑔􀉢􀒔􀒕􀢏􀒖􀥪􀉣􀒠􀒡􀥕􀉤􁈨􁈩􀉩􀉪􀓣􀓤􀯑􀯒􀯓􀯧􀯨􀯩􀜕􀜖􀜗􀜘􁅖􁅗􁏺􁎨􁙓􁙔􁃑􀴔􁅀􁅁􁇦􀪼􀪽􀉫􀉬􀠃􀠄􁝞􁝟􁙙􁙚􁙛􁅇􁅈􀾌􀾍􁒃􁒄􀝊􀝋􀻷􀻸􀰵􀰶􀉭􀉮􀉯􀉰􀉱􀉲􀉳􀉴􀉵􀉶􀭽􀭾􀉷􀉸􁃈􁃉􁅔􁅕􁂛􁂜􁞮􀉹􀉺􀿏􁀶􁗡􁗢􀏻􀏼􀓥􀓦􀏏􀏐􁖚􁖛􁙰􁙱􀪨􀪩􀪪􀦎􀿐􀦏􀿑􀿒􀿓􀪫􁙁􀳾􀳿􁙂􁗅􁗆􁗇􁘁􀝢􀝣􀝤􀪢􀪣􁏚􁏛􁐑􀝻􀝼􀝽􀵮􀵯􀵰􀐳􀐴􀐵􁟺􁟻􁈑􁌈􁒐􁒑􁒒􁔙􁌏􁔚􁔛􁔜􁔝􁔞􁔟􁌐􁔠􁔡􁌑􁔢􁌒􁔣􁔤􁌌􁔥􁔦􁔧􁕑􁔨􁔩􁔪􁔫􁔬􁌎􁔭􁔮􁔯􁌊􁔰􁔱􁔲􁔳􁔴􁔵􁌇􁌉􁔶􁔷􁌓􁔸􁌆􁔹􁔺􁌋􁔻􁔼􁔽􁔾􁔿􁕀􁕁􁕂􁌍􁕃􁕄􁕅􁌔􁕆􁒋􁕇􁐃􁕈􁕉􁕊􁕌􁒌􁑠􁖌􁖍􀝐􀝑􁜇􁜈􁟏􁟐􁟑􁟒􁟓􁟔􁟕􁟖􁟗􁟘􁟙􁟚􁟛􀦥􁗈􁚸􁚺􁚹􁜽􀡵􀡶􁚻􁚼􁗉􁗊􁚽􁚾􁗋􁗌􁚿􁛀􁗍􁜤􁜥􁛽􁛾􁛿􁜀􁜁􁜂􁜃􁜄􁜦􁜧􁜨􁜩􁜪􁜫􁜬􁜭􀛯􀠏􀠐􁒔􁒕􁏋􁏌􀆔􀩿􀪀􀪁􀪂􁁺􀆕􀆖􀆍􀆎􁍂􁍃􁍄􁍅􀆧􀯆􀣨􀶞􀜚􀶟􀶠􀪒􀶡􀶢􀥌􀇭􀇮􀆨􀷃􀷄􀆩􀥣􀥤􀥥􀥦􀯝􁆭􀆙􀆚􀆛􀆜􁂈􁂉􀆗􀆘􁂒􁂓􀆝􀆞􀆡􀆢􀆥􀆦􀢡􀢢􀣊􀢣􀇯􀇰􀇱􀇲􀫌􀭅􁚀􀣠􀣡􀮴􀮐􀭆􀭇􀭈􀯪􁑢􀱢􀺪􀫍􀇳􀺑􀫒􁚏􁔕􁚐􀓖􁚑􀣭􁚒􀞹􁚓􀞺􁚔􀺎􀆪􁅍􀤆􁅏􀵱􀵲􀵳􀵴􀵵􀵶􁇲􁇳􀆫􀆬􀆭􀆮􀷎􀷏􁜎􁜏􀆱􀆲􁛁􁛂􀆳􀆴􁛃􁛄􀻞􀻟􁛅􁛆􀆵􀆶􁛇􁛈􀆷􀆸􁛉􁛊􀡈􀡉􀡊􀡋􀡌􀡍􀡎􀡏􁐉􁐊􁐋􁐌􁐍􁐎􁐏􁐐􀖃􀆹􀆺􀆻􀆼􁑯􁑰􁜷􁜸􀆽􀆾􀫸􀆿􀇀􀇁􁛋􁛌􀇂􀇃􁛍􁛎􀇄􀇅􁛏􁛐􀇆􀇇􁛑􁛒􀇈􀇉􁛓􁛔􀇊􀇋􁛕􁛖􀇌􀇍􁛗􁛘􀇎􀇏􁛙􁛚􀇐􀇑􁛛􁛜􀇒􀇓􁛝􁛞􀇞􀇟􁛟􁛠􀇔􀇕􁛡􁛢􀇖􀇗􁛣􁛤􀇘􀇙􁛥􁛦􀇚􀇛􁛧􁛨􀇜􀇝􁛩􁛪􀇠􀇡􁛫􁛬􀇢􀇣􁛭􁛮􀇤􁛯􁛰􀇦􁛱􁛲􀇥􁇌􁇍􁠂􀇧􁛳􁛴􀇨􁛵􁛶􀇩􁛷􁛸􀇪􀦜􁛹􁛺􀇫􁛻􁛼􁏃􀇬􁏄􁗄􀴾􀴿􀵀􁃚􁃛􁎄􁗃􁎅􁎆􁜰􀠑􀠒􁇊􁇋􁘯􁘰􁚂􁚃􀈀􀈁􀙬􀙭􁇒􁇓􁋸􁋻􀙕􀙖􀸰􀸱􀊃􀊄􀊕􀊖􀽍􀽎􀊙􀊚􁟼􁟽􀪅􀪆􀊅􀊆􀊗􀊘􀊛􀊜􀛶􀛷􀜪􀜫􀢙􀢚􀊇􀊈􁚞􁚟􀊉􀊊􀺃􀺄􀊋􀊌􀺅􀺆􀊍􀊎􁋮􁋯􀊏􀊐􁋰􁋱􀊑􀊒􀊓􀊔􀩨􀩩􀩪􀩫􀑖􀑗􀑘􀊝􀵉􀵊􀊞􀵋􀵌􀊟􀵍􀵎􀯠􀵏􀵐􀜥􁞪􁞫􀬲􀬳􀊠􀊡􀻁􀻂􀽅􀽆􁜊􁜋􁜌􁜍􀊢􀊣􀫠􀫡􀌊􀑞􀊤􀊥􀊦􀊧􀥑􀥒􀊨􀊩􀾏􀾐􀊪􀰮􀑪􀑬􀫀􀑫􁁑􁁒􀣁􀍿􀎀􀶰􀶱􀎁􀎂􀎃􀎄􀎅􀎆􀎇􀎈􀎉􀎊􀘤􀘥􀘦􀘧􀘨􀘩􀫊􀊫􀒒􀒓􀊬􀊭􀊮􀥩􀭥􁇥􁈟􀤎􀊰􀊱􀒩􀒪􀼿􀽀􀊲􀊳􀻩􀻪􀺁􀺂􁙃􁙄􁎔􁎓􀫰􀫱􀀀􀀁􀻃􀻄􀀂􀀃􀪗􀪖􀝜􀍷􀕩􀕪􀕫􀢊􁅃􀓞􀧒􀧙􀜞􀫲􀣽􀺇􀺈􀺉􀺊􀞾􀞿􀇸􀇹􀺲􀺳􀬎􀬏􀙢􀙣􀷙􀷚􀮷􀂒􀂓􀣦􀣧􀚓􀚔􀪛􀪚􀾘􀏠􀘜􀕰􀕱􀕮􀕯􀕲􀕳􀡗􀡘􁒠􁒡􁒢􁒣􁒤􁒥􁊓􀓔􀧑􀴥􀭉􀕴􀕵􀧺􀧻􀐅􀐆􀫝􀴨􀴩􁚍􁚎􀰙􀯇􁄻􀐇􀐈􀐉􀐊􀭘􀭙􀭚􀭛􀭜􀭝􀐋􀐌􀦲􀦳􀦴􀦵􀦶􀦷􀦸􀦹􀦺􀦻􀦼􀓙􀤲􀓚􀣮􀣯􀪵􀪶􀩢􀫴􀑋􀑌􀑍􀑎􀯴􀯵􀮵􀮶􀺾􀻀􀿨􀿩􀏃􀏄􀣤􀣥􀤶􀤷􁋶􁋷􀿯􀿰􀧈􀧉􀾊􀾋􀧊􀧋􀏟􀕸􀧌􀧍􀏣􀏤􀏥􀏦􀏢􀘮􀤳􀾮􀾯􀤴􀤵􁁣􁁤􀥞􀥟􁁥􁁦􀴊􀨨􀨱􀨩􁁧􁁨􀥝􁈔􀭳􀭴􁁩􁁪􀭵􀭶􁁫􁁬􀏧􀏨􀤽􀤾􀽏􀽐􀶣􀥀􀤿􀻯􀻰􀾬􀾭􁃀􁃁􀏩􀏪􀇴􀚅􀇷􀚈􀛦􀛧􀇵􀚇􀇶􀚆􀓛􀚉􀟏􀟐􀾆􀾇􀿬􀿭􀿱􀿲􀽸􀽹􀽺􀾄􀾅􁁭􁁮􀽽􀽾􀽼􀽻􁁯􁁰􀽿􀾀􀾁􁁱􁁲􀾃􀾂􁁳􁁴􀽰􀽱􀽲􀽳􁉕􁉖􀽴􀽵􀽶􀽷􀝶􀝷􀿳􀿴􀿵􀿶􀾚􀧶􀧷􀿷􀿸􀿹􀿺􀾛􀲞􀲟􀿻􀿼􀿽􀿾􀾜􀲠􀲡􀿿􁀀􁀁􁀂􀾝􀛣􀛤􀚕􀚖􁀸􁀹􀾙􀇾􀇿􀟈􀟉􁇡􁇢􁀃􁀄􁀅􁀆􀾗􀟊􀟋􁀇􁀈􁀼􁀽􀝝􀝞􁀉􁀊􁀾􁀿􀶺􀶻􁀋􁀌􁀺􁀻􀟆􀟇􀇺􀇻􀇼􀇽􀊴􀊵􀊸􀊹􀼱􀼲􁃪􁃫􀊶􀊷􀊺􀊻􀞽􀛥􀲕􀲖􀲗􀲘􀧡􀧢􁓯􁓔􀒂􀊼􀒃􀊽􀒄􀊿􀒅􀊾􀋂􀋃􀋄􀋇􀋈􀋅􀋆􀠧􀠨􀑮􀋀􀋁􀙦􀙧􀙨􀿮􀞡􀞢􀲊􀵔􁙾􁙿􀋉􀋊􀋋􀋌􀼳􀼴􀋍􀋎􀋏􀋐􀤔􀤕􁙌􁝼􁝽􀶶􀶷􁜅􁜆􀶸􁁜􁜔􀋑􀋒􀋕􀋖􀼻􀼼􀘬􀘭􁙇􁙈􀋓􀋔􀷌􀷍􀋗􀋘􀋙􀋚􀋛􀋜􀼷􀼸􀋝􀋞􀋟􀋠􀻿􀼀􀝖􀝗􀰷􀰸􁄤􁄠􀋡􀋢􀋣􀋤􀽁􀽂􀦫􀦬􀋥􀋦􀋧􀋨􀼵􀼶􁃗􁃘􀋩􀋪􀋫􀋬􁐓􁐔􀘳􀘴􁝱􁝲􁉘􀒗􀒘􀒙􀒚􀌋􀌌􀌍􀌎􀽑􀽒􀌏􀌐􀌑􀌒􀢓􀢔􀌓􀌔􀒞􀒟􀘿􀙀􀙳􀙴􀙵􀙶􀢕􀢖􀙷􀙸􀙹􀙺􀌕􀌖􀌗􀌘􀓪􀝌􀞋􀌞􀌟􀌠􀌡􀹺􀹻􀢗􀢘􀌢􀌣􀝁􀝂􀌤􀌥􀌦􀌧􁋬􁋭􁗗􁗘􁏊􀼁􀼂􁐕􁐖􀜃􀜄􁒞􁒟􀡙􀡚􁒘􁒙􀌨􀌩􁇎􁇏􀌪􀌫􁇐􁇑􀌬􀌭􁆶􁆷􁈏􁈐􀌮􀌯􁂪􁂫􀌰􀌱􀌲􀌳􀌴􀌵􁌴􁌵􁌶􁌷􀌶􀌷􀿋􀿌􀬄􀬅􀕺􀕻􁁟􁁠􀱮􀱯􀱰􀱱􁗮􁗯􀌸􀌹􀌼􀌽􀒤􀘲􁃒􁃓􀌾􀌿􀒥􀒦􀖎􀖏􁙗􁙘􀬛􀬜􀼃􀼄􀍀􀍁􁏽􁏾􀍂􀍃􀍄􀍅􀍆􀍇􀒧􀒨􁂅􀍈􀜅􀜆􀙰􀴦􀴧􀍉􀍊􀍋􀍌􀽉􀽊􀍍􀍎􀜮􀜯􀮺􀮻􁃊􁃋􀼅􀼆􀍏􀍐􀍑􀍒􀍓􀍔􁙣􁙤􀍕􀍖􀍗􀍘􀦗􀦘􀍙􀍚􁎧􀍛􀍜􀫙􀫚􀍝􀍞􀣪􀣫􀢾􀬸􀢿􀣀􀍟􀺺􀺻􁅦􁅧􁅨􁓹􀣋􀣌􀺼􀺽􀥎􀥏􀙤􀫎􀫏􀉈􁇔􁇕􀞷􀍠􀍡􀍢􀠩􀠪􀍣􀍤􀒫􀒬􀍥􀍦􀍧􀍨􁚢􁚣􀍩􀍪􀒭􀒮􀍫􀍬􀍭􀍮􁚦􁚧􁖊􁖋􀍯􀍰􀒯􀒰􁂨􁄭􀦠􀦡􀟾􀟿􀍱􀍲􀜍􀜎􀍳􀍴􀍺􀍻􁎴􁎵􀪐􀪑􀬗􀍼􁝊􁝋􀍽􀓓􀓧􁐗􁐘􀍾􀬧􀎌􀠕􀧰􀺴􀺵􀧣􀧤􀧥􀧦􀧧􀧨􀧩􀧪􀧫􀧬􀧭􀧮􀫐􀎏􀟽􀎐􀎑􀎒􀣶􀣷􀟂􀟃􀰬􀎕􀎖􀙄􀙅􀷔􀷕􀤈􀤉􀎗􀎘􀎙􀤊􀤋􀤭􀤮􀤏􀤐􀝾􁇄􁇅􀎚􀎛􀪾􀪞􀪟􀪿􀪊􀪋􀪌􀪍􁞸􁞹􀎜􀎝􀷡􀷢􀯡􀯢􀢟􀢠􀯙􀯚􁝾􁝿􀶉􀶊􀶋􀶌􁞯􁞰􀺧􀺨􁂻􁂼􁔘􁕒􀥭􀥮􀤚􀤛􀠀􀎞􀎟􀥆􀥇􀒼􀒽􀤨􀤩􁇆􁇇􀛭􀛮􁇖􁇗􀞃􀞄􁓼􁓽􁎦􁌝􁏁􁏂􁔄􁔅􁁋􁁌􁝚􁝛􁌙􁒚􁌚􁒛􁌛􁎹􁌜􁎺􁎶􁌞􁏀􁌟􁎿􁌠􁌡􁎻􁒨􁎾􁌢􁒩􁏘􁏙􁒫􁎽􁌣􁎼􁌤􁒪􁌥􁏒􁒜􁒝􁌦􁏓􁏮􁏻􁎑􁌧􁏯􁏼􁎒􁌨􁏰􁏤􁏥􁕳􁘀􁕴􁕵􁌽􁍀􀽤􁌩􁌾􁍁􀽥􁌼􁍆􁍇􀽦􁌫􁍈􁍉􀽧􁍊􁍋􁍌􀽨􁍍􁍎􁍏􀽩􁍐􁍑􁍒􀽪􁌯􁍓􁍔􀽫􁍕􁍖􁍗􀽬􁍘􁍙􁍚􀽭􁌱􁍛􁍜􀽮􁌮􁍝􁍞􀽯􁍟􁌪􁌬􁁻􁌳􁌭􁌰􁁼􁍠􁍡􁍢􁁽􁍣􁌲􁓜􁜮􁜯􁒰􁒱􁒲􁒳􁓟􁓠􁒴􁒵􁙏􁙐􁏜􁏝􁏨􁏩􁏞􁏟􁏪􁏫􁏠􁏡􁘠􁘡􁏬􁏭􁘢􁘣􁏦􁏧􁓡􁓢􁑫􁑬􁑭􁑮􁒁􁒂􁑿􁒀􁑽􁑾􁑳􁑴􁑵􁑶􁏢􁏣􁑹􁑺􁑻􁑼􁑷􁑸􁓥􁓦􁓧􁓨􁘘􁘙􁔆􁔇􁓩􁓪􁓫􁓬􁓭􁓮􁔌􁔍􁒼􁒽􁒾􁒿􁓀􁓁􁓆􁓇􁓂􁓃􁓍􁓎􁐼􁐽􁒺􁒻􁔉􁔊􁒶􁒷􁒸􁒹􁓝􁓞􁒬􁒭􁒮􁒯􁓣􁓤􁓵􁓶􁔎􁔏􁓷􁓸􁐅􁐆􁐇􁐈􁚱􁚲􀙩􀙪􁁏􁁐􁐲􁐳􁐴􁐵􁐶􁐷􁐮􁐯􁐸􁐹􁐰􁐱􁐠􁐡􁖒􁖓􁐢􁐣􁐤􁐥􁐦􁐧􁕠􁕡􁐨􁐩􁐞􁐟􁐪􁐫􁐾􁐿􁞀􁞁􁕋􁋨􁋩􁞂􁞃􁔐􁔑􁞄􁞅􁘭􁘮􁞆􁞇􁘱􁘲􁞈􁞉􀰯􀰰􁞊􁞋􀯌􀯍􁞌􁞍􁝮􁝭􁞎􁞏􁝳􁝴􁞐􁞑􁗝􁗞􁞒􁞓􀟻􀟼􀮅􀮆􀝒􀝓􀝔􀝕􀎠􀎡􀒲􀒳􀢵􀢶􀡜􀡝􀢈􀢉􀢱􀢲􀢳􀢴􀞙􀞚􀎢􀎣􁙍􁙎􁙥􁙦􀎤􀎥􁜗􁜘􀑙􀑚􀟕􀟖􁠯􁠰􁠱􁠲􁠳􀙇􀷖􀷗􀽗􀽘􀙈􀙥􀎦􀎧􀒴􀒵􀽋􀽌􀎨􀎩􀎪􀜇􀜈􀽕􀽖􀙉􁇯􁇰􀎫􀙊􀙋􀻫􀻬􀎬􀎭􀢅􀢆􀢇􀴌􀎮􀎯􀎰􀎱􀑠􀡷􀡸􀣂􀎽􀫥􀧓􀫦􀧖􀢸􁘤􁁝􁁞􁄼􁄽􁄾􁄿􀢹􁏴􀼑􀼜􀶽􀨦􀨧􀙗􁏳􀼒􀼝􀶾􁃃􀥺􀪲􀼢􀦱􀦮􀪱􀼣􀨳􀪬􀧘􀟛􁊭􁏵􀼓􀼞􀶿􁃂􀬩􁘞􀪯􀪰􁏍􁏎􀦯􀑝􀦰􀢺􀫨􀫩􀫪􀫫􀫧􁂲􀴐􀪴􀪳􀟝􁄥􁄦􀴎􀡆􁅚􁅛􀨴􁄧􁄨􀐶􁟜􁟝􁟞􁟟􁟠􁟡􁟢􁟣􁟤􁟥􁟦􁊮􁊯􁊰􁊱􁊲􁊳􁊴􁊵􁊶􁊷􁊸􀟜􁄩􁄪􀴏􀡇􁅜􁅝􀨵􁄫􁄬􀴑􀼔􀼟􀶼􀬫􀬬􀾖􀟞􀯖􀮔􁊿􁋀􁋁􁋂􀾩􀾪􀺏􀺐􀟟􀴒􀥓􀵑􁟧􁟨􁟩􁟪􀟠􀴓􀥔􀵒􁄟􁋟􀼕􀼠􀷀􁀲􀮕􀮖􁁍􁁎􀺮􀺰􀺱􀺣􀺤􀟤􀫋􀵄􀵅􀼡􀢷􀨶􀸎􀺗􀴪􁃄􁃅􁃆􁃇􁒏􀻖􀻗􀻘􀻙􀴡􀴢􀻱􀻲􀻳􀻴􀴣􀴤􀺹􀺭􀑈􀒾􀒿􀸸􀹥􀹦􀠦􀟥􀲋􀲌􀹧􀹨􀹩􀹪􀪷􀲍􀲎􀹫􀹬􁄡􁄢􁄣􁅐􁅑􀺒􀹭􀹮􀹯􀻔􀺯􀾢􀾣􀾤􀾥􀾦􁅞􁅟􁅠􁅡􁅢􀹰􀹱􀷧􀷨􀷩􀷪􀷫􀷬􀷭􀷮􀟢􀟣􀮍􀟳􀮎􀟴􀝎􀝏􀟵􀟶􀨫􀡴􀺌􀺍􀻹􀻺􀻻􀻼􀼩􀼪􀼫􀼬􀝩􀝪􀼧􀼨􁓺􁓻􀺓􀺔􀺥􀺦􀴞􀎲􀒶􀷘􀎳􀎴􁅋􁅌􀦽􀦾􀎵􀒷􀵨􀵩􀵪􀫑􀲰􁝡􀑡􀾑􀾒􀱪􀑢􀾧􀾨􀱫􀪔􀪕􁈴􁈵􀌙􀖒􀰭􀙱􀭷􀭸􀱘􀱙􀱚􀙲􀭹􀭺􀱛􀱜􀱝􀼗􀖀􀷈􀷉􁅒􀠳􀠴􀑧􀑨􀭱􀭲􀫹􀫺􀫻􀫼􁁀􀑭􀟑􀑓􀒸􀒹􀷯􀷰􀙘􀙙􀭯􀭰􁢱􁢲􀽛􀽜􁖝􁖞􀿈􁢦􀡞􀝃􁄲􁄳􀝄􀝅􀝈􀝉􀜛􀜜􀝆􀝇􀲛􀲜􀜝􀷶􀷷􀸅􀸆􀸌􀸍􀼮􀼯􀼰􁁾􁁿􁂀􁂁􀡥􀱬􀱭􁈌􁞖􁞗􀵢􀷁􀷂􁋴􁋵􁞘􁞙􀵞􀵟􀵠􀵡􀾰􀾱􀾲􀾳􁢧􁢨􀾴􀾵􁢩􁢪􀾶􀾷􀾸􀾹􀾺􀾻􀾼􀾽􁋊􁣆􁋋􁣇􁀱􁟊􁟉􁀔􁀕􁞻􁞼􁀖􁀗􁀟􁉍􁀠􁀡􁞽􁞾􁀢􁀣􁀤􁉑􁉱􁉲􁉳􁉴􁉵􁉶􀾾􀾿􁟄􁟅􁟁􀿀􁉐􁀴􁟆􁋌􁀵􁊉􁟂􁟃􁟇􁊌􁀷􁟌􀿁􁊁􁠴􀿄􀿅􀿦􁞛􁊂􀿧􁊍􁞚􁉻􁁵􁁶􁁷􁁸􁁹􁀰􁕣􁕦􁕧􁀳􁂩􁡉􁉙􁉚􁞿􁟀􁎷􁎸􁉤􁉥􁉦􁉧􁉬􁉭􁉮􁉯􁉪􁠅􁠇􁠈􁠉􁠊􁠋􁠌􁠀􁠁􁠍􁠎􁠏􁠐􁠑􁠒􁠓􁠔􁠕􁠖􁠙􁠚􁠛􁠜􁠝􁠞􀿂􀿃􁡊􁡋􁡌􁡍􁡎􁡏􁡐􁡑􁡒􁡓􁡔􁡕􁡖􁡗􁡘􁡙􁡚􁡛􁡜􁡝􁡞􁡟􁡠􁡡􁡢􁡣􁀐􁀑􁖳􁖷􁖴􁖸􁖵􁖹􁖶􁖺􁢠􁢡􁢯􁢰􁕼􁕽􁕾􁖃􁖄􁖅􁢚􁠟􁠠􁠡􁉢􁉣􁊀􁠷􁠸􁠵􁠶􀫬􀫭􁠹􁠺􁠄􁠿􁡀􁡁􁡂􁡃􁡄􀫮􀫯􁕷􁕺􁕻􁕶􁕿􁕸􁕹􁖀􁖥􁖦􁢷􁢸􁢹􁢺􁢻􁢼􁢽􁢾􁢿􀦚􀦛􀬭􁒆􁈹􁒅􁚶􁚷􁒉􁒊􁒇􁒈􀎓􀎔􀠷􀠸􁃌􁃍􁚭􁚮􁚯􁚰􀠱􀠲􁇂􁇃􀣜􀣝􀣞􀣟􁂶􀼍􀼎􀼘􀼙􀑆􀑇􀒺􀒻􀥴􀥵􀻡􀻢􀓎􀓏􀓐􀓑􁗛􁗜􁗟􁗠􀌚􀌛􀌜􀌝􀯔􀯕􁖐􁖑􁞱􁞲􀾞􀾟􁂰􁂱􀲬􀲭􀥲􀥳􁂬􁂭􀙜􁊘􁊙􁂂􁂃􁂄􁝯􁝰􁞔􁞕􀾠􀾡􁔈􀎶􀎷􀸊􀸋􁒖􁒗􀪃􀪄􀎸􀙌􀥧􀨸􀋭􀋮􀛿􀜀􀽇􀽈􀋯􀋰􀜁􀜂􁂔􁂕􀦧􀨭􀦭􀨯􀨰􀦈􀦉􀥿􀦀􀦩􀦪􀖆􀯏􀯐􀜣􀦿􀧁􀵣􀞇􀪓􁉗􁎏􁎐􀉻􀉼􀷊􀷋􀽓􀽔􁝌􁝍􀉽􀉾􁗩􁗪􀉿􀊀􀷝􀷞􀊁􀊂􀷟􀷠􀝰􀝱􀖓􀖔􀬁􀬂􀪤􀪥􀪦􀪧􀙽􀙾􀙿􀚀􀤹􀤺􀦂􀦃􀤻􀤼􀟰􀟱􀟮􀟯􀲮􀲯􀦅􀦆􀖂􀘱􀎹􀎿􀏀􀎺􀎻􀥄􀎼􀎾􀡢􀮃􀮄􀲏􁢏􀹃􁇝􁇞􁎕􁔔􁙮􀏅􀏆􁂮􁂯􀲱􀲲􀞲􀢪􀢫􀢬􀢭􀢮􀢯􀢰􀨺􁙯􁙭􁙪􁙫􀥁􀥂􀏑􀏒􀏓􀏔􀏕􀏖􀏗􀏘􀵚􀵛􀏫􀏬􀑯􀑰􀣵􀏭􀏮􀏯􀏰􀲳􀲴􀏱􀏲􀏳􀏴􀏹􀏺􀽙􀽚􀏚􀏛􀰱􀰲􀱤􀱥􀱦􀱧􀏡􁚬􀏜􀥃􁅊􀏞􀣾􀣿􀦍􀣰􀣑􀤀􀤁􀢌􀣚􀤯􀏝􀯫􀯬􀩶􀩷􀐏􀐐􀐑􀐒􀐓􀐔􀩲􀐕􀐖􀩈􀥖􀩉􀥗􀩊􀥘􀩋􀥙􀩌􀥚􀩍􀥛􁘂􁘃􁘄􁘅􁘆􁘇􁘈􁘉􁘊􁘋􁘌􁘍􀜊􀣱􀬱􀾔􀾕􁀘􀉨􀌆􁚊􁚋􁚌􀐗􀰗􁐄􀟲􀐘􀐙􀬨􀳴􀐚􀐛􁇈􁇉􀟄􀟅􀘸􁀒􀳇􀳈􀳋􀳌􀐜􀐝􀰳􀰴􀐞􀐟􀙒􀙓􀙐􀙑􀐠􀧏􀐡􀐢􀙔􀐣􀐩􀐪􀐫􀐬􁆸􁆹􁙜􁙝􀹴􀹵􁜒􁜓􁜱􁜲􀹶􀹷􀡑􀡒􀐭􀐮􁗀􁗁􀐯􀐰􁂥􀐱􁙅􁙆􀭄􀣔􀱨􀯛􀛸􀛹􀦒􀫁􀦓􀫂􀦔􀫃􀦕􀫄􀿖􀿗􀿘􀿙􀿚􀿛􀿜􀿝􀿞􀿟􀿠􀿡􀿢􀿣􀿤􀿥􀧸􀧹􀩄􀩅􀩆􀩇􀨲􀧼􀧽􀧾􀧿􀨀􀨁􀨂􀨃􀨄􀨅􀨆􀩸􀩹􀩺􀩻􀨇􀨈􀨉􀨊􀨋􀨌􀨍􀨎􀨏􀨐􀨑􀨒􀨓􀨔􀨕􀨖􀨗􀨘􀨙􀨚􀨛􀨜􀨝􀨞􀾈􀾉􀝥􀝦􁙧􁙨􀸘􀸙􁞴􁞵􀻐􀻑􁎤􁎥􁖩􁖪􁖎􁖏􀸩􀸹􀸺􀐷􀐸􀙮􀙯􀯭􀯮􀯯􁉽􁋼􁉼􁋽􁋛􁋜􀯰􁌅􀯱􀯲􀯳􀳃􀳄􀡓􀡔􀐾􀐿􀭧􀑀􀜋􀣉􀑁􀴚􀴛􁘳􁘴􁘵􁘶􁘷􁘸􁣃􀮋􁓓􀮌􀮞􀮟􀑂􀘞􀜟􀟪􀟫􀑃􀑄􀑅􁆬􁅥􀙫􀞈􀞉􁏏􀸶􀸷􀻽􀻾􁃨􀠅􀠆􀡹􀡺􀪇􀪈􀲵􀲶􀟒􀥠􀬚􀭭􀭮􁑡􁔗􁔖􁕓􁕔􁕕􀑉􀑊􀓀􀓁􀑏􀑐􁂠􁂡􀿫􀿪􀭨􀑑􀑒􀖇􁇛􁇜􀣬􀖈􀖉􀭿􀮀􁎣􀚐􀚑􀚒􀒱􀠌􀞍􀡠􀞐􀡛􀞑􀞖􀞏􀟗􀍵􀞒􀞓􀟨􀟩􀠉􀟦􀠊􀟧􀓗􀓘􀘟􀓜􀡦􀡧􀝯􀕼􁋪􁋫􀠍􀠎􀛨􁁔􁁕􀺸􀺶􀛩􀛪􀢋􀥢􁙠􀷾􁙕􀭞􀋲􀻧􀻨􀋱􀢽􀋳􀋴􀣩􀋵􀋶􀝿􀞀􁖖􀋷􀋸􀋹􀋺􀋻􀋼􀋽􀋾􁘿􁙀􀋿􀌀􀌁􀌂􀌃􀌄􀌅􁉀􁉁􀧎􀵫􀵬􁖭􀬉􀌇􀜓􀌈􀌉􀧱􀧲􀘵􀘶􀅏􀵷􀵿􀅐􀅒􀅑􀓢􀓡􀥊􀅯􀅰􀅓􀅔􀅕􀅖􀨡􀅗􀅘􀅙􀅪􀅫􀅬􀅭􀝧􀝨􀥋􀘽􀘾􀅮􀅱􁂷􁂸􁖻􀅶􁓘􁓗􁓖􁓕􀤍􀒆􀅳􀅴􀅵􁊇􁊈􀅷􀢐􀢑􀅸􀅹􀅍􁑣􀁜􀁝􀃬􀃭􀄢􀄣􀅎􀢒􀣴􀁞􀁟􀃮􀃯􀘯􀘰􀞟􀞠􀅼􀁌􀁍􀃜􀃝􀏇􀏈􀡪􀡫􀡿􀢀􀅽􀁎􀁏􀃞􀃟􀏉􀏊􀡬􀡭􀢁􀢂􀛺􀍶􀘝􀅺􀅻􀅾􀁐􀁑􀃠􀃡􀅿􀁒􀁓􀃢􀃣􀆀􀁔􀁕􀃤􀃥􀆁􀁘􀁙􀃦􀃧􀆂􀁖􀁗􀃨􀃩􀙚􀸏􀡅􀤘􀤙􁇵􀆃􀁚􀁛􀃪􀃫􀆄􀁠􀁡􀃰􀃱􀏍􀏎􀡰􀡱􀢃􀢄􀞝􀞞􀒉􀒊􀆅􀁢􀁣􁜞􁜟􁜢􁜣􁃎􀃲􀃳􀏋􀏌􀡮􀡯􁁚􁁛􀞛􀞜􀆉􀁲􀁳􀄂􀄃􀯶􀯷􀯸􀯹􀯺􀆊􀁴􀁵􀄄􀄅􀯻􀯼􀯽􀯾􀯿􀆋􀰪􀆌􀰫􀆇􀁮􀁯􀃾􀃿􀆈􀁰􀁱􀄀􀄁􀆏􀆐􀆑􀆒􀆓􀄪􀁺􀁻􀄊􀄋􀰌􀰍􀰎􀰏􀰐􀄫􀁼􀁽􀄌􀄍􀰑􀰒􀰓􀰔􀰕􀄨􀁶􀁷􀄆􀄇􁎳􀄩􀁸􀁹􀄈􀄉􀄮􀂂􀂃􀄒􀄓􀰹􀰺􀰻􀰼􀰽􀄯􀂄􀂅􀄔􀄕􀰾􀰿􀱀􀱁􀱂􀄰􀂆􀂇􀄖􀄗􀱃􀱄􀱅􀱆􀱇􀄱􀂈􀂉􀄘􀄙􀱈􀱉􀱊􀱋􀱌􀄭􀂀􀂁􀄐􀄑􀄬􀁾􀁿􀄎􀄏􀄴􀄸􀄵􀄹􀄲􀄶􀄳􀄷􀄼􀂎􀂏􀞸􀄞􀄟􀱍􀱎􀱏􀱐􀱑􀱒􀄽􀂐􀂑􀄠􀄡􀱓􀱔􀱕􀱖􀱗􀄺􀂊􀂋􀄚􀄛􀄻􀂌􀂍􀄜􀄝􀧐􀬑􀄾􀑾􀑿􀒀􀒁􀑹􀑺􀑻􀑼􀑽􀄿􀅃􀓆􀓇􀅀􀅄􀓈􀓉􀅁􀅅􀓊􀓋􁂊􁂌􁂍􀅂􀅆􀓌􀓍􁂎􁂐􁂑􀚋􀚌􀚍􀚎􀅈􀚁􀚂􀅉􀚃􀚄􀅊􀧛􀧜􀱶􀱷􀱸􀅋􀫞􀫟􀱻􀱼􀱽􀅇􁂆􁂇􀅌􀊯􀖊􀖋􀢤􁐂􀤖􀙛􀙞􀙟􀟷􀟸􀖄􀖅􀙠􀙡􀓄􀄦􀁪􀁫􀃺􀃻􀰀􀰁􀰂􀰃􀰄􀰅􀓅􀄧􀁬􀁭􀃼􀃽􀰆􀰇􀰈􀰉􀰊􀰋􀓂􀄤􀁦􀁧􀃶􀃷􀓃􀄥􀁨􀁩􀃸􀃹􀕧􀕨􀸓􀕬􀕭􀀄􀀅􀂔􀂕􀀆􀀇􀂖􀂗􀀈􀀉􀂘􀂙􀀊􀀋􀂚􀂛􀀌􀀍􀂜􀂝􀀎􀀏􀂞􀂟􀀐􀀑􀂠􀂡􀀒􀀓􀂢􀂣􀀔􀀕􀂤􀂥􀀖􀀗􀂦􀂧􀀘􀀙􀂨􀂩􀀚􀀛􀂪􀂫􀀜􀀝􀂬􀂭􀀞􀀟􀂮􀂯􀀠􀀡􀂰􀂱􀀢􀀣􀂲􀂳􀀤􀀥􀂴􀂵􀀦􀀧􀂶􀂷􀀨􀀩􀂸􀂹􀀪􀀫􀂺􀂻􀀬􀀭􀂼􀂽􀀮􀀯􀂾􀂿􀀰􀀱􀃀􀃁􀀲􀀳􀃂􀃃􀀴􀀵􀃄􀃅􀀶􀀷􀃆􀃇􁎢􀖗􀖘􀗗􀗘􁑀􀖙􀖚􀗙􀗚􁑁􀖛􀖜􀗛􀗜􁑂􀖝􀖞􀗝􀗞􁑃􀖟􀖠􀗟􀗠􁑄􀖡􀖢􀗡􀗢􁑅􀖣􀖤􀗣􀗤􁑆􀖥􀖦􀗥􀗦􁑇􀖧􀖨􀗧􀗨􁑈􀖩􀖪􀗩􀗪􁑉􀖫􀖬􀗫􀗬􁑊􀖭􀖮􀗭􀗮􁑋􀖯􀖰􀗯􀗰􁑌􀖱􀖲􀗱􀗲􁑍􀖳􀖴􀗳􀗴􁑎􀖵􀖶􀗵􀗶􁑏􀖷􀖸􀗷􀗸􁑐􀖹􀖺􀗹􀗺􁑑􀖻􀖼􀗻􀗼􁑒􀖽􀖾􀗽􀗾􁑓􀖿􀗀􀗿􀘀􁑔􀗁􀗂􀘁􀘂􁑕􀗃􀗄􀘃􀘄􁑖􀗅􀗆􀘅􀘆􁑗􀗇􀗈􀘇􀘈􁑘􀗉􀗊􀘉􀘊􁑙􀗋􀗌􀘋􀘌􁑚􀗍􀗎􀘍􀘎􁑛􀗏􀗐􀘏􀘐􁑜􀗑􀗒􀘑􀘒􁑝􀗓􀗔􀘓􀘔􁑞􀗕􀗖􀘕􀘖􁑟􀮰􀮱􀮲􀮳􀀸􀀹􀃈􀃉􀀺􀀻􀃊􀃋􀀼􀀽􀃌􀃍􀀾􀀿􀃎􀃏􀁀􀁁􀃐􀃑􀘗􀘘􀘙􀘚􀁂􀁃􀃒􀃓􀁄􀁅􀃔􀃕􀑱􀑲􀑵􀑶􀁆􀁇􀃖􀃗􀁈􀁉􀃘􀃙􀁊􀁋􀃚􀃛􀑳􀑴􀑷􀑸􀓫􀔊􀔩􀕈􀓬􀔋􀔪􀕉􀓭􀔌􀔫􀕊􀓮􀔍􀔬􀕋􀓯􀔎􀔭􀕌􀓰􀔏􀔮􀕍􀓱􀔐􀔯􀕎􀓲􀔑􀔰􀕏􀓳􀔒􀔱􀕐􀓴􀔓􀔲􀕑􀓵􀔔􀔳􀕒􀓶􀔕􀔴􀕓􀓷􀔖􀔵􀕔􀓸􀔗􀔶􀕕􀓹􀔘􀔷􀕖􀓺􀔙􀔸􀕗􀓻􀔚􀔹􀕘􀓼􀔛􀔺􀕙􀓽􀔜􀔻􀕚􀓾􀔝􀔼􀕛􀓿􀔞􀔽􀕜􀔀􀔟􀔾􀕝􀔁􀔠􀔿􀕞􀔂􀔡􀕀􀕟􀔃􀔢􀕁􀕠􀔄􀔣􀕂􀕡􀔅􀔤􀕃􀕢􀔆􀔥􀕄􀕣􀔇􀔦􀕅􀕤􀔈􀔧􀕆􀕥􀔉􀔨􀕇􀕦􀘠􀘡􀘢􀘣􀚗􀚘􀚽􀚾􀚙􀚚􀚿􀛀􀚛􀚜􀛁􀛂􀚝􀚞􀛃􀛄􀚟􀚠􀛅􀛆􀚡􀚢􀛇􀛈􀚣􀚤􀛉􀛊􀚥􀚦􀛋􀛌􀚧􀚨􀛍􀛎􀚩􀚪􀛏􀛐􀚫􀚬􀛑􀛒􀚭􀚮􀛓􀛔􀚯􀚰􀛕􀛖􀚱􀚲􀛗􀛘􀚳􀚴􀛙􀛚􀚵􀚶􀛛􀛜􀚷􀚸􀛝􀛞􀚹􀚺􀛟􀛠􀚻􀚼􀛡􀛢􀣺"
//        
//        for (offset, element) in SFSymbol.sfSymbolsV4.enumerated() {
//           let imageIndex = symbols.index(symbols.startIndex, offsetBy: offset)
//           print("""
//           case .\(element.rawValue):
//                return \"\(symbols[imageIndex])\"
//           """)
//        }
//    }
}
